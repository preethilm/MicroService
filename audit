package com.bos.cpoms.repository;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.hibernate.envers.AuditReader;
import org.hibernate.envers.AuditReaderFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.bos.cpoms.model.Instrument;
import com.google.common.collect.Lists;

@Repository
@Transactional
public class InstrumentRepositoryImpl implements InstrumentRepositoryCustom {
	
	
	private static final Logger logger = LoggerFactory.getLogger(InstrumentRepositoryImpl.class);
	
	@PersistenceContext
	private EntityManager entityManagerFactoryBean;	

	public List<Instrument> getAllRevisionForInstrument(String ipoCode){
		
		AuditReader auditReader = AuditReaderFactory.get(entityManagerFactoryBean);		
		List<Number> revisionNumbers = auditReader.getRevisions(Instrument.class, ipoCode);
		
		List<Instrument> revisionedInstruments = Lists.newArrayList();
		
		for (Number revision : revisionNumbers) {
			Instrument auditedInstrument = auditReader.find(Instrument.class, ipoCode, revision);	
			revisionedInstruments.add(auditedInstrument);
			logger.info("Instrument {} at revision {}",auditedInstrument,revision);			
		}
		
		return revisionedInstruments;
	}

}
